plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

def googleMapsApiReleaseKey = hasProperty('RELEASE_MAPS_MAPCACHE_API_KEY') ? RELEASE_MAPS_MAPCACHE_API_KEY : ''
def googleMapsApiKeyDebug = hasProperty('DEBUG_MAPS_API_KEY') ? DEBUG_MAPS_API_KEY : ''

android {
    compileSdk 34
    namespace 'mil.nga.mapcache'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    kotlin {
        jvmToolchain(17)
    }

    // Verbose logging for debug
//    allprojects {
//        tasks.withType(JavaCompile) {
//            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
//        }
//    }
    defaultConfig {
        applicationId "mil.nga.mapcache"
        resValue "string", "applicationId", applicationId
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        minSdkVersion 29
        targetSdkVersion 34
        versionCode 65
        versionName '2.1.12'
        multiDexEnabled true
    }
    signingConfigs {
        release {
            if (project.hasProperty('KEYSTORE')) {
                println 'assigning keystore'
                storeFile file(KEYSTORE)
                storePassword KEYSTORE_PASSWORD
                keyAlias KEY_ALIAS
                keyPassword KEY_PASSWORD
            } else {
                println 'no keystore property configured'
            }
        }
    }
    buildFeatures {
        buildConfig = true
    }
    buildTypes {
        release {
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "mapcache.apk"
                }
            }
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            resValue "string", "GOOGLE_MAPS_ANDROID_API_KEY", googleMapsApiReleaseKey
        }
        debug {
            applicationIdSuffix ".test"
            resValue "string", "applicationId", defaultConfig.applicationId + applicationIdSuffix
            minifyEnabled false
            resValue "string", "GOOGLE_MAPS_ANDROID_API_KEY", googleMapsApiKeyDebug
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt']
        }
    }
    sourceSets {
        main {
            java {
                srcDirs 'src/main/java', 'src/test', 'src/androidTest'
            }
        }
    }
    lint {
        baseline file("lint-baseline.xml")
        checkReleaseBuilds false
        abortOnError false
    }
}

task androidAppVersion {
    doLast {
        println "versionCode: ${android.defaultConfig.applicationId}@${android.defaultConfig.versionCode}"
        println "versionName: ${android.defaultConfig.applicationId}@${android.defaultConfig.versionName}"
    }
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    api 'androidx.appcompat:appcompat:1.6.1'
    api 'androidx.activity:activity:1.8.1'
    api 'com.google.android.material:material:1.6.0'
    api 'androidx.preference:preference:1.2.1'
    api 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    api 'mil.nga.geopackage.map:geopackage-android-map:6.7.4' // comment out to build locally
    //api project(':geopackage-map') // uncomment me to build locally
    api 'mil.nga.mgrs:mgrs-android:2.2.3'
    api 'mil.nga.gars:gars-android:1.2.3'

    implementation 'com.google.code.gson:gson:2.8.7'
    implementation 'androidx.exifinterface:exifinterface:1.3.6'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.viewpager2:viewpager2:1.1.0-beta01'
    implementation 'org.locationtech.jts:jts-core:1.18.2'
    implementation 'com.github.matomo-org:matomo-sdk-android:v2.0.0'
    implementation 'junit:junit:4.12'
    testImplementation 'androidx.multidex:multidex:2.0.1'
    testImplementation 'junit:junit:4.12'
    testImplementation "org.robolectric:robolectric:4.7.3"
    testImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    testImplementation 'androidx.test:core:1.5.0'
    testImplementation 'androidx.test.ext:junit:1.1.5'
    testImplementation 'androidx.test:runner:1.5.2'
    testImplementation 'androidx.test:rules:1.5.0'
}

apply plugin: 'kotlin-android'
